digraph G {
        concentrate = true;
        overlap     = false;
        splines     = true;
            eDEFENDER_STATE_INIT                   -> {DEFENDER_StateInit [shape=rectangle]}
    eDEFENDER_STATE_STARTED                -> {DEFENDER_StateNewMQTT [shape=rectangle]}
    eDEFENDER_STATE_NEW_MQTT_FAILED        -> {DEFENDER_StateSleep [shape=rectangle]}
[color=red]    eDEFENDER_STATE_NEW_MQTT_SUCCESS       -> {DEFENDER_StateConnectMqtt [shape=rectangle]}
    eDEFENDER_STATE_CONNECT_MQTT_FAILED    -> {DEFENDER_StateDeleteMqtt [shape=rectangle]}
[color=red]    eDEFENDER_STATE_CONNECT_MQTT_SUCCESS   -> {DEFENDER_StateSubscribe [shape=rectangle]}
    eDEFENDER_STATE_SUBSCRIBE_MQTT_FAILED  -> {DEFENDER_StateDisconnectMqtt [shape=rectangle]}
[color=red]    eDEFENDER_STATE_SUBSCRIBE_MQTT_SUCCESS -> {DEFENDER_StateCreateReport [shape=rectangle]}
    eDEFENDER_STATE_SUBMIT_REPORT_FAILED   -> {DEFENDER_StateDisconnectMqtt [shape=rectangle]}
[color=red]    eDEFENDER_STATE_SUBMIT_REPORT_SUCCESS  -> {DEFENDER_StateDisconnectMqtt [shape=rectangle]}
    eDEFENDER_STATE_DISCONNECT_FAILED      -> {DEFENDER_StateDisconnectMqtt [shape=rectangle]}
[color=red]    eDEFENDER_STATE_DISCONNECTED           -> {DEFENDER_StateDeleteMqtt [shape=rectangle]}
    eDEFENDER_STATE_DELETE_FAILED          -> {DEFENDER_StateDeleteMqtt [shape=rectangle]}
[color=red]    eDEFENDER_STATE_SLEEP                  -> {DEFENDER_StateSleep [shape=rectangle]}
DEFENDER_StateInit -> eDEFENDER_STATE_STARTED
DEFENDER_StateNewMQTT -> eDEFENDER_STATE_NEW_MQTT_FAILED[color=red]
DEFENDER_StateNewMQTT -> eDEFENDER_STATE_NEW_MQTT_SUCCESS
DEFENDER_StateConnectMqtt -> eDEFENDER_STATE_CONNECT_MQTT_FAILED[color=red]
DEFENDER_StateConnectMqtt -> eDEFENDER_STATE_CONNECT_MQTT_SUCCESS
DEFENDER_StateSubscribe -> eDEFENDER_STATE_SUBSCRIBE_MQTT_FAILED[color=red]
DEFENDER_StateSubscribe -> eDEFENDER_STATE_SUBSCRIBE_MQTT_SUCCESS
DEFENDER_StateCreateReport -> eDEFENDER_STATE_SUBMIT_REPORT_FAILED[color=red]
DEFENDER_StateCreateReport -> eDEFENDER_STATE_SUBMIT_REPORT_FAILED[color=red]
DEFENDER_StateCreateReport -> eDEFENDER_STATE_SUBMIT_REPORT_SUCCESS
DEFENDER_StateDisconnectMqtt -> eDEFENDER_STATE_DISCONNECT_FAILED[color=red]
DEFENDER_StateDisconnectMqtt -> eDEFENDER_STATE_DISCONNECTED
DEFENDER_StateDeleteMqtt -> eDEFENDER_STATE_DELETE_FAILED[color=red]
DEFENDER_StateDeleteMqtt -> eDEFENDER_STATE_SLEEP
DEFENDER_StateSleep -> eDEFENDER_STATE_STARTED

}

