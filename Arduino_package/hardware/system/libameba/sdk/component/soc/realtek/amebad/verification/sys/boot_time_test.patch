--- startup_old.c	2015-03-24 10:28:37.411372900 +0800
+++ startup.c	2015-03-25 10:50:37.955858900 +0800
@@ -678,6 +678,7 @@
     NewVectorTable[2] = (HAL_VECTOR_FUN)HalNMIHandler_Patch;
 }
 
+#define BOOT_TIME_ANALYZE
 //3 Image 1
 HAL_RAM_TEXT_SECTION
 VOID
@@ -685,6 +686,22 @@
     VOID
 )
 {
+    u32 StartCount = 0;
+    u32 EndCount = 0;
+	
+    u32 StartFlashCCount = 0;
+    u32 EndFlashCCount = 0;
+	
+    u32 StartSdramCCount = 0;
+    u32 EndSdramCCount = 0;
+
+    u32 StartSramDLCount = 0;
+    u32 EndSramDLCount = 0;
+
+    u32 StartSdramDLCount = 0;
+    u32 EndSdramDLCount = 0;
+    StartCount = HAL_READ32(TIMER_REG_BASE, TIMER_INTERVAL + TIMER_CURRENT_VAL_OFF);
+
 #if defined ( __ICCARM__ )   
     __iar_data_init3();
 #endif 
@@ -750,9 +767,10 @@
 #if CONFIG_SPIC_EN && SPIC_CALIBRATION_IN_NVM
     SpicNVMCalLoadAll();
 #endif
-
+    StartFlashCCount = HAL_READ32(TIMER_REG_BASE, TIMER_INTERVAL + TIMER_CURRENT_VAL_OFF);
     /* Jason Deng Modification 20141205 */
     SYSCpuClkConfig((u8)(CPU_CLOCK_SEL_VALUE>>4));
+    EndFlashCCount = HAL_READ32(TIMER_REG_BASE, TIMER_INTERVAL + TIMER_CURRENT_VAL_OFF);
 
     StartupHalInitPlatformLogUart();
     #endif  //CONFIG_CP
@@ -780,7 +798,7 @@
 #endif  //CONFIG_MP
     SpicFlashInit(SpicBitMode);
 #endif  //CONFIG_SPIC_MODULE
-
+    StartSdramCCount = HAL_READ32(TIMER_REG_BASE, TIMER_INTERVAL + TIMER_CURRENT_VAL_OFF);
 #ifdef CONFIG_SDR_EN
 #if defined ( __ICCARM__ )  
 // SDRAM init from IAR Macro
@@ -789,7 +807,8 @@
 #endif
 	SdrControllerInit();
 #endif
-    
+    EndSdramCCount = HAL_READ32(TIMER_REG_BASE, TIMER_INTERVAL + TIMER_CURRENT_VAL_OFF);
+
     //3 2) Download image 2    
     // Get Default Image2 Information
     Image2LoadAddr = (HAL_READ32(SPI_FLASH_BASE, 0x18)&0xFFFF) * 1024;
@@ -846,6 +865,7 @@
     Image2Len = HAL_READ32(SPI_FLASH_BASE, Image2LoadAddr);
     Image2Addr = HAL_READ32(SPI_FLASH_BASE, (Image2LoadAddr+0x4));
 
+    StartSramDLCount = HAL_READ32(TIMER_REG_BASE, TIMER_INTERVAL + TIMER_CURRENT_VAL_OFF);
     //RtlConsolRom(1000);//each delay is 100us
 	DBG_8195A("Flash Image2:Addr 0x%x, Len %d, Load to SRAM 0x%x\n", Image2LoadAddr, Image2Len, Image2Addr);
 	for (ImageIndex = 0x10 + Image2LoadAddr; ImageIndex < (Image2Len + Image2LoadAddr + 0x10); ImageIndex = ImageIndex + 4) {
@@ -854,11 +874,14 @@
 
         SpicImageIndex += 4;
     }
+    EndSramDLCount = HAL_READ32(TIMER_REG_BASE, TIMER_INTERVAL + TIMER_CURRENT_VAL_OFF);
+
 #ifdef CONFIG_SDR_EN
     u32 Image3LoadAddr;
     u32 Image3Len;
     u32 Image3Addr;
 
+    StartSdramDLCount = HAL_READ32(TIMER_REG_BASE, TIMER_INTERVAL + TIMER_CURRENT_VAL_OFF);
     Image3LoadAddr = Image2LoadAddr + Image2Len+0x10;
     Image3Len = HAL_READ32(SPI_FLASH_BASE, Image3LoadAddr);
     Image3Addr = HAL_READ32(SPI_FLASH_BASE, Image3LoadAddr + 0x4);
@@ -878,6 +901,7 @@
 			SpicImageIndex += 4;
 		}
 	}
+	EndSdramDLCount = HAL_READ32(TIMER_REG_BASE, TIMER_INTERVAL + TIMER_CURRENT_VAL_OFF);
 #endif	
 #endif
     //3 3) Jump to image 2
@@ -887,7 +911,20 @@
         DBG_8195A("Invalid Image2 Signature\n");
         RtlConsolRom(1000);//each delay is 100us
     }
-
+    EndCount = HAL_READ32(TIMER_REG_BASE, TIMER_INTERVAL + TIMER_CURRENT_VAL_OFF);
+#ifdef BOOT_TIME_ANALYZE
+    DiagPrintf("\n\r %s:0x%08x:0x%08x(0x%08x)\n"
+		"flashC:(0x%08x)\n"
+		"SdramC:(0x%08x)\n"
+		"RamD:(0x%08x)\n"
+		"SdramD:(0x%08x)\n", __FUNCTION__, 
+		0xFFFFFFFF - StartCount, 0xFFFFFFFF - EndCount, (StartCount - EndCount),
+		(StartFlashCCount - EndFlashCCount),
+		(StartSdramCCount - EndSdramCCount),
+		(StartSramDLCount - EndSramDLCount),
+		(StartSdramDLCount - EndSdramDLCount)
+		);
+#endif
     Image2EntryFun->RamStartFun();
 }
 
@@ -936,8 +973,14 @@
 //3 Imgae 2
 INFRA_START_SECTION
 VOID
-InfraStart(VOID)
-{   
+InfraStart(VOID) //558*32 us = 17.856 ms
+{
+    u32 StartCount1 = 0;
+    u32 StartCount2 = 0;
+    u32 Start32KCCount = 0;
+    u32 End32KCCount = 0;
+
+   StartCount1 = HAL_TIMER_READ32(TIMER_INTERVAL + TIMER_CURRENT_VAL_OFF);
 #ifdef CONFIG_FPGA
     HAL_WRITE32(0xE000ED00, 0x98, 0);
     HAL_WRITE32(0xE000ED00, 0x9C, 0);
@@ -971,7 +1014,7 @@
     //4 Ram Bss Iitial
     u32 BssLen = (__bss_end__ - __bss_start__);
 
-    _memset((void *) __bss_start__, 0, BssLen);
+    _memset((void *) __bss_start__, 0, BssLen);//24*32
 
 #if CONFIG_SPIC_EN && SPIC_CALIBRATION_IN_NVM
     SpicNVMCalLoadAll();
@@ -991,8 +1034,9 @@
 
 #ifndef CONFIG_FPGA
 #ifdef CONFIG_TIMER_MODULE
-    Calibration32k();
-    
+    Start32KCCount = HAL_READ32(TIMER_REG_BASE, TIMER_INTERVAL + TIMER_CURRENT_VAL_OFF);
+    Calibration32k();//534*32=17.088ms
+    End32KCCount = HAL_READ32(TIMER_REG_BASE, TIMER_INTERVAL + TIMER_CURRENT_VAL_OFF);
 #ifdef CONFIG_WDG
 #if WDG_Verify_Mode
     WDGInit();
@@ -1042,6 +1086,14 @@
 #endif
     SpicDisableRtl8195A();  // turn off SPIC for power saving
 
+    StartCount2 = HAL_READ32(TIMER_REG_BASE, TIMER_INTERVAL + TIMER_CURRENT_VAL_OFF);
+#ifdef BOOT_TIME_ANALYZE
+    printf("\n\r InfraStart StartCount: 0x%x 0x%x (0x%x)\n"
+		"32K cali: 0x%x 0x%x (0x%x) \n", 
+		0xffffffff - StartCount1, 0xffffffff - StartCount2, (StartCount1 - StartCount2),
+		0xffffffff - Start32KCCount, 0xffffffff - End32KCCount, (Start32KCCount - End32KCCount)
+		);
+#endif
     _AppStart();
 
 }
